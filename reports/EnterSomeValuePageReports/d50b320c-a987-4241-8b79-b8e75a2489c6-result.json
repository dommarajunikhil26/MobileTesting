{"name": "test_enterValue", "status": "broken", "statusDetails": {"message": "AttributeError: 'NoneType' object has no attribute 'to_capabilities'", "trace": "request = <SubRequest 'beforeClass' for <TestCaseFunction test_openEnterValuePage>>\n\n    @pytest.fixture(scope='module')\n    def beforeClass(request):\n>       driver = Driver().get_driver()\n\nconftest.py:8: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n../utils/driver.py:7: in get_driver\n    driver = webdriver.Remote(android_url, UiAutomator2Options().load_capabilities(android_caps))\n../venv/lib/python3.9/site-packages/appium/webdriver/webdriver.py:229: in __init__\n    super().__init__(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <[AttributeError(\"'WebDriver' object has no attribute 'session_id'\") raised in repr()] WebDriver object at 0x7fc3b8929ca0>\ncommand_executor = <appium.webdriver.appium_connection.AppiumConnection object at 0x7fc3b8929cd0>\nkeep_alive = True, file_detector = None, options = None\n\n    def __init__(\n        self,\n        command_executor: Union[str, RemoteConnection] = \"http://127.0.0.1:4444\",\n        keep_alive: bool = True,\n        file_detector: Optional[FileDetector] = None,\n        options: Optional[Union[BaseOptions, List[BaseOptions]]] = None,\n    ) -> None:\n        \"\"\"Create a new driver that will issue commands using the wire\n        protocol.\n    \n        :Args:\n         - command_executor - Either a string representing URL of the remote server or a custom\n             remote_connection.RemoteConnection object. Defaults to 'http://127.0.0.1:4444/wd/hub'.\n         - keep_alive - Whether to configure remote_connection.RemoteConnection to use\n             HTTP keep-alive. Defaults to True.\n         - file_detector - Pass custom file detector object during instantiation. If None,\n             then default LocalFileDetector() will be used.\n         - options - instance of a driver options.Options class\n        \"\"\"\n    \n        if isinstance(options, list):\n            capabilities = create_matches(options)\n            _ignore_local_proxy = False\n        else:\n>           capabilities = options.to_capabilities()\nE           AttributeError: 'NoneType' object has no attribute 'to_capabilities'\n\n../venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:192: AttributeError"}, "start": 1722876523471, "stop": 1722876523471, "uuid": "28466f5c-c36f-440b-8b82-b98a85f0e202", "historyId": "b49520a15381240882de49bd67480803", "testCaseId": "b49520a15381240882de49bd67480803", "fullName": "TestEnterSomeValuePage.TestEnterSomeValuePage#test_enterValue", "labels": [{"name": "tag", "value": "order(2)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('beforeClass', 'beforeMethod')"}, {"name": "suite", "value": "TestEnterSomeValuePage"}, {"name": "subSuite", "value": "TestEnterSomeValuePage"}, {"name": "host", "value": "Nikhils-MacBook-Air.local"}, {"name": "thread", "value": "11411-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestEnterSomeValuePage"}]}